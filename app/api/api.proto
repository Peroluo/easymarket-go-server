syntax = "proto3";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "easymarket-go-server/common/goods/api/api.proto"; 
import "easymarket-go-server/common/topic/api/api.proto";
import "easymarket-go-server/common/wechat/api/api.proto";

package app.service.v1;


option go_package = "api";
option (gogoproto.goproto_getters_all) = false;

enum ActivityServiceErrCode{
  Undefined    = 0;			    // 默认
  TokenTimeOut = 1001;		 // token过期
  TokenIsError = 1002;		 // token解析失败
  TokenIsNew   = 1003;     // token已失效
}

service App {
  // 微信小程序登录
  rpc WeChatGetOpenID(wechat.service.v1.CodeReq) returns (wechat.service.v1.OpenIdRes) {
    option (google.api.http) = {
      post: "/app/weChat/getOpenId",
      body: "*"
    };
  };
  // 微信小程序登录
  rpc WeChatLogin(wechat.service.v1.LoginReq) returns (wechat.service.v1.LoginRes) {
    option (google.api.http) = {
      post: "/app/weChat/login",
      body: "*"
    };
  };
  // 获取商品列表
  rpc GetGoodsList(goods.service.v1.GoodsReq) returns (goods.service.v1.GoodsListRes) {
    option (google.api.http) = {
      get: "/app/goods/list"
    };
  };
  // 获取商品详情
  rpc GetGoodsDetail(goods.service.v1.GoodsDetailReq) returns (goods.service.v1.GoodsRes) {
    option (google.api.http) = {
      get: "/app/goods"
    };
  };
  // 获取制造商详情
  rpc GetBrandDetail(goods.service.v1.BrandsDetailReq) returns (goods.service.v1.BrandsDetailRes) {
    option (google.api.http) = {
      get: "/app/brand"
    };
  };
   // 获取制造商列表
   rpc GetBrandList(goods.service.v1.BrandsListReq) returns (goods.service.v1.BrandListRes) {
    option (google.api.http) = {
      get: "/app/brand/list"
    };
  };
  // 获取专题详情
  rpc GetTopic(topic.service.v1.TopicReq) returns (topic.service.v1.TopicRes){
    option (google.api.http) = {
      get: "/app/topic"
    };
  }
  // 获取专题列表
  rpc GetTopicList(topic.service.v1.TopicListReq) returns (topic.service.v1.TopicListRes){
    option (google.api.http) = {
      get: "/app/topic/list"
    };
  }
  // 获取相似专题列表
  rpc GetTopicRelated(topic.service.v1.TopicRelatedReq) returns (topic.service.v1.TopicListRes){
    option (google.api.http) = {
      get: "/app/topic/related"
    };
  }
  // 获取子商品分类列表
  rpc GetCategoryList(goods.service.v1.CategoryChildReq) returns (goods.service.v1.CateGoryListRes){
    option (google.api.http) = {
      get: "/app/category/list"
    };
  }
  // 获取商品分类详情
  rpc GetCategory(goods.service.v1.CategoryReq) returns (goods.service.v1.CategoryRes){
    option (google.api.http) = {
      get: "/app/category"
    };
  }
  // 获取商品售卖信息
  rpc GetGoodsSell(goods.service.v1.GoodsDetailReq) returns (GoodsSellRes){
    option (google.api.http) = {
      get: "/app/goods/sell"
    };
  }
}
message GoodsSellRes {
  // 商品规格
  repeated goods.service.v1.GoodsSize goodsSize= 1 [(gogoproto.moretags) = 'form:"goodsSize"',(gogoproto.jsontag)='goodsSize'];
  // 商品轮播图
  repeated goods.service.v1.GoodsGallery goodsGallery= 2 [(gogoproto.moretags) = 'form:"goodsGallery"',(gogoproto.jsontag)='goodsGallery'];
   // 商品特点
  repeated goods.service.v1.Attribute attribute = 3 [(gogoproto.moretags) = 'form:"attribute"',(gogoproto.jsontag)='attribute'];
   // 商品疑问列表
   repeated goods.service.v1.GoodsIssue issue = 4 [(gogoproto.moretags) = 'form:"issue"',(gogoproto.jsontag)='issue'];
   // 产品列表
  repeated goods.service.v1.Product productList = 5 [(gogoproto.moretags) = 'form:"productList"',(gogoproto.jsontag)='productList'];
}